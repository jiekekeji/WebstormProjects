/**************另一种方式***************************/

// 闭包是由函数与其相关的引用环境组合而成的实体，即使离开创建它的环境也不例外。
// 第一点：必须有一个函数，第二：该函数必须引用了外部的变量，父的父变量也可以
// 两个条件都不可缺少，

// 例如：下面是由fun2函数和其引用的变量age组合成的实体 就是一个闭包
function fun1() {
    var age=12;
    var fun2=function () {
        // 在调用的时候才创建闭包
        console.log("age="+age);
        age++;
    }

    return fun2;
}

//离开了创建它的环境
//每调用一次产生一个闭包

var fun=fun1();
fun();
fun();
fun();

fun=fun1();
fun();
fun();
fun();


/**************另一种方式***************************/

function fun3() {
    var age=12;
    function fun4() {
        console.log("age="+age);
    }
    //在这里调用也会产生闭包
    fun4();
}

fun3();